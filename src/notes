// class already exist in js so we need to use className even the same for {for} in input tag for that we need to write "htmlFor"\

// Here the html code is converted to js for that do check babel.js

//when using props you cant see the boolean values

//Conditional rendering

//for inline styling we use double curly braces or you can use create an object like this and use
function App() {
  const styles = { color: "white", backgroundColor: "teal", padding: "2rem" };
  return (
    <section>
      <h1 style={styles}>Inline Style</h1>
    </section>
  );
}

//react icons are installed using command

//React Portal was started

// Now we are talking about props drilling could even be done in othe ways like zustand redux etc...

//let's discuss some disadv of using props drilling

//Use Reducer

// import React, { useReducer } from "react";

// const initialState = { count: 0 };

// const reducer = (state, action) => {
//   switch (action.type) {
//     case "increment":
//       return { ...state, count: state.count + 1 };
//       break;
//     case "decrement":
//       return { ...state, count: state.count - 1 };
//       break;
//     case "reset":
//       return { ...state, count: 0 };

//     default:
//       return state;
//   }
// };

// function App() {
//   const [state, dispatch] = useReducer(reducer, initialState);
//   return (
//     <div>
//       <h1>Count: {state.count}</h1>
//       <button onClick={() => dispatch({ type: "increment" })}>+</button>
//       <button onClick={() => dispatch({ type: "decrement" })}>-</button>
//       <button onClick={() => dispatch({ type: "reset" })}>reset</button>
//     </div>
//   );
// }

// export default App;

//Use Ref

// import React from "react";
// import { useRef } from "react";

// function App() {
//   const inputElement = useRef(null);
//   console.log(inputElement.current);

//   const focusInput = () => {
//     inputElement.current.focus();
//     inputElement.current.value = "Ajay";
//   };
//   return (
//     <div>
//       <input type="text" ref={inputElement} />
//       <button onClick={() => focusInput()}>Focus & Write Deepak</button>
//     </div>
//   );
// }

// export default App;

//Custom Hooks

// fetch data

// import React, { useEffect, useState } from "react";

// function App() {
//   const [data, setData] = useState(null);

//   useEffect(() => {
//     fetch("https://jsonplaceholder.typicode.com/todos")
//       .then((res) => res.json())
//       .then((data) => setData(data));
//   }, []);

//   return (
//     <div>
//       {data &&
//         data.map((todo) => {
//           return <li key={todo.id}>{todo.title}</li>;
//         })}
//     </div>
//   );
// }

// export default App;

//Custome Hook

// import React, { useEffect, useState } from "react";
// import useFetch from "./components/CustomHooks/UseFetch";

// function App() {
//   const [data] = useFetch("https://jsonplaceholder.typicode.com/todos");

//   return (
//     <div>
//       {data &&
//         data.map((todo) => {
//           return <li key={todo.id}>{todo.title}</li>;
//         })}
//     </div>
//   );
// }

// export default App;
